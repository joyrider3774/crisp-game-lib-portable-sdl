# Controls when the workflow will run
on:
  # Allows you to run this workflow manually target the Actions tab
  workflow_dispatch:

name: Build
jobs:
  build:
    strategy:
      matrix:
        include:
          - { runson: 'windows-latest',   sys: 'mingw64', env: 'x86_64', name: 'Cglpsdl2', binsuffix: '.exe'}
          - { runson: 'windows-latest',   sys: 'mingw32', env: 'i686',   name: 'Cglpsdl2', binsuffix: '.exe'}
          - { runson: 'ubuntu-24.04',     sys: 'usr',     env: 'x64',    name: 'Cglpsdl2', binsuffix: ''}
          - { runson: 'ubuntu-22.04',     sys: 'usr',     env: 'x64',    name: 'Cglpsdl2', binsuffix: ''}
          - { runson: 'ubuntu-20.04',     sys: 'usr',     env: 'x64',    name: 'Cglpsdl2', binsuffix: ''}
          - { runson: 'ubuntu-24.04-arm', sys: 'usr',     env: 'arm64',  name: 'Cglpsdl2', binsuffix: ''}
          - { runson: 'ubuntu-22.04-arm', sys: 'usr',     env: 'arm64',  name: 'Cglpsdl2', binsuffix: ''}


    runs-on: ${{matrix.runson}}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - if: ${{ matrix.runson == 'windows-latest'}}
        name: Setup Msys
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: >-
            base-devel
            mingw-w64-${{matrix.env}}-gcc
            mingw-w64-${{matrix.env}}-SDL2             
            mingw-w64-${{matrix.env}}-make
            mingw-w64-${{matrix.env}}-cmake

      - if: ${{ matrix.runson != 'windows-latest'}}
        name: install libsdl2-dev
        run: |
          sudo apt update
          sudo apt-get install -y libx11-dev libxft-dev libxext-dev libasound2-dev libgl-dev libglew-dev libgl1-mesa-dev
        
      - if: ${{ matrix.runson == 'windows-latest'}}
        name: Build Game Windows
        shell: msys2 {0}
        run: |
          cd src/cglpSDL2
          mkdir build
          cmake --build build
      
      - if: ${{ matrix.runson != 'windows-latest'}}
        name: Build Game Other
        run: |
          cd src/cglpSDL2
          mkdir build
          cmake --build build -DUSE_VENDORED_SDL=1

      - name: Copy Game And Assets
        run: |
          mkdir ./Release
          mkdir "./Release/${{matrix.name}}"
          cp "src/cglpSDL2/build/${{matrix.name}}${{matrix.binsuffix}}" "./Release/${{matrix.name}}/"
          cp ./README.md "./Release/${{matrix.name}}/"
          cp ./LICENSE.txt "./Release/${{matrix.name}}/"
         
      - name: Store build
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.name}}-${{matrix.runson}}_${{ matrix.env }}
          path: ./Release/
