# Controls when the workflow will run
on:
  # Allows you to run this workflow manually target the Actions tab
  workflow_dispatch:

name: Build
jobs:
  build:
    strategy:
      matrix:
        include:
          - { runson: 'windows-latest',   runsontype: 'windows', sys: 'mingw64', env: 'x86_64', name: 'CglpSDL2', binsuffix: '.exe'}
          - { runson: 'windows-latest',   runsontype: 'windows', sys: 'mingw32', env: 'i686',   name: 'CglpSDL2', binsuffix: '.exe'}
          - { runson: 'ubuntu-24.04',     runsontype: 'linux',   sys: 'usr',     env: 'x64',    name: 'CglpSDL2', binsuffix: ''}
          - { runson: 'ubuntu-22.04',     runsontype: 'linux',   sys: 'usr',     env: 'x64',    name: 'CglpSDL2', binsuffix: ''}
          - { runson: 'ubuntu-20.04',     runsontype: 'linux',   sys: 'usr',     env: 'x64',    name: 'CglpSDL2', binsuffix: ''}
          - { runson: 'ubuntu-24.04-arm', runsontype: 'linux',   sys: 'usr',     env: 'arm64',  name: 'CglpSDL2', binsuffix: ''}
          - { runson: 'ubuntu-22.04-arm', runsontype: 'linux',   sys: 'usr',     env: 'arm64',  name: 'CglpSDL2', binsuffix: ''}
          - { runson: 'macos-10.15',      runsontype: 'mac',     sys: 'usr',     env: 'intel',  name: 'CglpSDL2', binsuffix: ''}
          - { runson: 'macos-13',         runsontype: 'mac',     sys: 'usr',     env: 'intel',  name: 'CglpSDL2', binsuffix: ''}
          - { runson: 'macos-14',         runsontype: 'mac',     sys: 'usr',     env: 'arm64',  name: 'CglpSDL2', binsuffix: ''}
          - { runson: 'macos-15',         runsontype: 'mac',     sys: 'usr',     env: 'arm64',  name: 'CglpSDL2', binsuffix: ''}


    runs-on: ${{matrix.runson}}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          
      - if: ${{ matrix.runsontype == 'windows'}}
        name: Setup Msys
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: >-
            base-devel
            mingw-w64-${{matrix.env}}-gcc
            mingw-w64-${{matrix.env}}-SDL2             
            mingw-w64-${{matrix.env}}-make
            mingw-w64-${{matrix.env}}-cmake

      - if: ${{ matrix.runsontype == 'linux'}}
        name: install libsdl2-dev
        run: |
          sudo apt update
          sudo apt-get install -y libx11-dev libxft-dev libxext-dev libasound2-dev libgl-dev libglew-dev libgl1-mesa-dev
        
      - if: ${{ matrix.runsontype == 'windows'}}
        name: Build Game Windows
        shell: msys2 {0}
        run: |
          cd src/cglpSDL2
          mkdir build
          cd build
          cmake -G "Unix Makefiles" ..
          make
          
      - if: ${{ matrix.runsontype != 'windows'}}
        name: Build Game Other
        run: |
          cd src/cglpSDL2
          mkdir build
          cd build      
          cmake -DUSE_VENDORED_SDL=1 ..
          make

      - if: ${{ matrix.runsontype == 'mac'}}
        name: Copy Game And Assets Mac
        run: |
          mkdir ./Release
          mkdir "./Release/${{matrix.name}}.app"
          mkdir "./Release/${{matrix.name}}.app/Contents"
          mkdir "./Release/${{matrix.name}}.app/Contents/MacOS"
          cp "src/cglpSDL2/build/${{matrix.name}}" "./Release/${{matrix.name}}.app/Contents/MacOS/${{matrix.name}}"
          cp ./README.md "./Release/"
          cp ./LICENSE.txt "./Release/"
          
      - if: ${{ matrix.runsontype != 'mac'}}
        name: Copy Game And Assets Other
        run: |
          mkdir ./Release
          mkdir "./Release/${{matrix.name}}"
          cp "src/cglpSDL2/build/${{matrix.name}}${{matrix.binsuffix}}" "./Release/${{matrix.name}}/"
          cp ./README.md "./Release/${{matrix.name}}/"
          cp ./LICENSE.txt "./Release/${{matrix.name}}/"
         
      - name: Store build
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.name}}-${{matrix.runson}}_${{ matrix.env }}
          path: ./Release/
